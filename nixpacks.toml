# nixpacks.toml

# Remove any 'providers = ["python@..."]' line if it caused issues,
# or use a .python-version file in your repo root (e.g., with "3.12.3") for Python version.

[phases.setup]
  aptPkgs = [
    "chromium-browser",
    "curl", "unzip",       # Utilities needed by your install_chromedriver.sh script
    # ... (your existing list of essential libraries for chromium-browser) ...
    "libglib2.0-0", "libnss3", "libfontconfig1", "libx11-6", "libxcb1",
    "libxcomposite1", "libxrandr2", "libxrender1", "libxtst6", "ca-certificates",
    "fonts-liberation", "libasound2t64", "libatk-bridge2.0-0", "libatk1.0-0",
    "libcups2", "libdbus-1-3", "libgdk-pixbuf2.0-0", "libgtk-3-0",
    "libpango-1.0-0", "libpangocairo-1.0-0", "xdg-utils"
  ]
  cmds = [
    "echo 'SETUP_CMDS: Making install_chromedriver.sh executable...'",
    # Nixpacks copies your repo to /app. If install_chromedriver.sh is in your repo root,
    # it will be at /app/install_chromedriver.sh in the build container.
    "chmod +x ./install_chromedriver.sh",  # Make sure it's executable
    "echo 'SETUP_CMDS: Running install_chromedriver.sh script...'",
    "./install_chromedriver.sh"           # Execute the script
  ]

[phases.install]
  # Your Python dependencies installation
  cmds = ["python -m venv --copies /opt/venv && . /opt/venv/bin/activate && pip install -r requirements.txt"]

[start]
  # Your application's normal start command
  cmd = "python scrape.py"