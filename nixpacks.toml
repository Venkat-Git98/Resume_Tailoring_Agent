# nixpacks.toml

# If you need a specific Python version, consider adding a .python-version file
# in your repo root with "3.12.x" instead of using the 'providers' key here,
# as that was causing parsing issues earlier.
# For now, let Python auto-detection work.
[phases.setup]
  aptPkgs = [
    "chromium-browser",       # Ensure this is the correct package name for your base image
    "chromium-chromedriver",
    # ... other essential libraries ...
    "curl", "unzip", "jq",
    "libglib2.0-0", "libnss3", "libfontconfig1", "libx11-6", "libxcb1",
    "libxcomposite1", "libxrandr2", "libxrender1", "libxtst6", "ca-certificates",
    "fonts-liberation", "libasound2t64", "libatk-bridge2.0-0", "libatk1.0-0",
    "libcups2", "libdbus-1-3", "libgdk-pixbuf2.0-0", "libgtk-3-0",
    "libpango-1.0-0", "libpangocairo-1.0-0", "xdg-utils"
  ]
  cmds = [
    "echo 'SETUP_CMDS: aptPkgs phase complete (chromium-browser and chromium-chromedriver should be installed).'",
    "echo 'SETUP_CMDS: Verifying chromium-browser installation and path...'",
    "if [ -f /usr/bin/chromium-browser ]; then \
        echo 'SETUP_CMDS: Found /usr/bin/chromium-browser'; \
        /usr/bin/chromium-browser --version; \
    elif [ -f /usr/bin/chromium ]; then \
        echo 'SETUP_CMDS: Found /usr/bin/chromium (NOT chromium-browser)'; \
        /usr/bin/chromium --version; \
    else \
        echo 'SETUP_CMDS: ERROR - Neither /usr/bin/chromium-browser NOR /usr/bin/chromium found!'; \
        echo 'SETUP_CMDS: Listing /usr/bin/chro* for debugging:'; \
        ls -l /usr/bin/chro* || echo 'No chro* files in /usr/bin'; \
        exit 1; \
    fi",
    "echo 'SETUP_CMDS: Verifying chromedriver installation and path...'",
    "if [ -f /usr/bin/chromedriver ]; then \
        echo 'SETUP_CMDS: Found /usr/bin/chromedriver'; \
        /usr/bin/chromedriver --version; \
    else \
        echo 'SETUP_CMDS: ERROR - /usr/bin/chromedriver NOT FOUND!'; \
        exit 1; \
    fi"
  ]

[phases.install]
  cmds = ["python -m venv --copies /opt/venv && . /opt/venv/bin/activate && pip install -r requirements.txt"]

[start]
  cmd = "python scrape.py"