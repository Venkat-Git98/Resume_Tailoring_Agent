#[phases.setup]
  aptPkgs = [
    "chromium-browser",
    "curl", "unzip", "jq",
    # ... all your other essential libraries from the previous version ...
    "libglib2.0-0", "libnss3", "libfontconfig1", "libx11-6", "libxcb1",
    "libxcomposite1", "libxrandr2", "libxrender1", "libxtst6", "ca-certificates",
    "fonts-liberation", "libasound2t64", "libatk-bridge2.0-0", "libatk1.0-0",
    "libcups2", "libdbus-1-3", "libgdk-pixbuf2.0-0", "libgtk-3-0",
    "libpango-1.0-0", "libpangocairo-1.0-0", "xdg-utils"
  ]
[phases.setup]
  aptPkgs = [
    "chromium-browser",
    "curl", "unzip", "jq", # jq can be useful for more advanced CfT JSON parsing if needed later
    "libglib2.0-0", "libnss3", "libfontconfig1", "libx11-6", "libxcb1",
    "libxcomposite1", "libxrandr2", "libxrender1", "libxtst6", "ca-certificates",
    "fonts-liberation", "libasound2t64", "libatk-bridge2.0-0", "libatk1.0-0",
    "libcups2", "libdbus-1-3", "libgdk-pixbuf2.0-0", "libgtk-3-0",
    "libpango-1.0-0", "libpangocairo-1.0-0", "xdg-utils"
  ]
    cmds = [
    "echo 'SETUP_CMDS: Making install_chromedriver.sh executable...'",
    # Nixpacks copies your repo content to /app inside the build container
    "chmod +x ./install_chromedriver.sh",
    "echo 'SETUP_CMDS: Running install_chromedriver.sh script...'",
    "./install_chromedriver.sh" # Execute the script
  ]
[phases.install]
  # Default pip install command for your Python requirements
  cmds = ["python -m venv --copies /opt/venv && . /opt/venv/bin/activate && pip install -r requirements.txt"]

[start]
  # Your application's normal start command
  cmd = "python scrape.py"